name: Airbase CI/CD

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to destroy (used for stop_review job)'
        required: false
        type: string

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Package for Airbase
        run: zip -r airbase.zip . -i build

      - name: Setup Airbase RC
        run: |
          mkdir -p ~/.airbase
          printf "%s" "$AIRBASE_RC" > ~/.airbase/airbaserc
        env:
          AIRBASE_RC: ${{ secrets.AIRBASE_RC }}

      - name: Deploy to Production
        run: |
          echo "ðŸš€ Deploying production build..."
          npx @airbase/airbase-cli@2.18.4 deploy \
            --branch "production" \
            --output deploy.env \
            --yes
        env:
          AIRBASE_ACCESS_KEY_ID: ${{ secrets.AIRBASE_ACCESS_KEY_ID }}
          AIRBASE_SECRET_ACCESS_KEY: ${{ secrets.AIRBASE_SECRET_ACCESS_KEY }}
          AIRBASE_RC: ${{ secrets.AIRBASE_RC }}

      - name: Production Environment Info
        run: echo "âœ… Production environment deployed successfully!"


  review:
    name: Deploy Review Environment
    runs-on: ubuntu-latest
    if: github.ref_name != 'main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Package for Airbase
        run: zip -r airbase.zip . -i build

      - name: Setup Airbase RC
        run: |
          mkdir -p ~/.airbase
          printf "%s" "$AIRBASE_RC" > ~/.airbase/airbaserc
        env:
          AIRBASE_RC: ${{ secrets.AIRBASE_RC }}

      - name: Deploy Review Environment
        run: |
          SAFE_ENV=$(echo "${CI_COMMIT_REF_SLUG}" | tr '[:upper:]' '[:lower:]' | sed 's#[^a-z0-9-]#-#g')
          echo "ðŸš€ Deploying review environment: $SAFE_ENV"
          npx @airbase/airbase-cli@2.18.4 deploy \
            --branch "$SAFE_ENV" \
            --output deploy.env \
            --yes
        env:
          AIRBASE_ACCESS_KEY_ID: ${{ secrets.AIRBASE_ACCESS_KEY_ID }}
          AIRBASE_SECRET_ACCESS_KEY: ${{ secrets.AIRBASE_SECRET_ACCESS_KEY }}
          AIRBASE_RC: ${{ secrets.AIRBASE_RC }}
          CI_COMMIT_REF_SLUG: ${{ github.ref_name }}

      - name: Save Airbase Link Artifact
        run: |
          mkdir -p .airbase
          echo '{"environment": "${{ github.ref_name }}"}' > .airbase/airbase.link.json

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: airbase-link
          path: .airbase/airbase.link.json


  stop_review:
    name: Stop Review Environment
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.branch != ''
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Airbase RC
        run: |
          mkdir -p ~/.airbase
          printf "%s" "$AIRBASE_RC" > ~/.airbase/airbaserc
        env:
          AIRBASE_RC: ${{ secrets.AIRBASE_RC }}

      - name: Stop Review
        run: |
          SAFE_ENV=$(echo "${CI_COMMIT_REF_SLUG}" | tr '[:upper:]' '[:lower:]' | sed 's#[^a-z0-9-]#-#g')
          echo "ðŸ§¹ Destroying review environment: $SAFE_ENV"
          npx @airbase/airbase-cli@2.18.4 destroy "$SAFE_ENV" --yes
        env:
          AIRBASE_ACCESS_KEY_ID: ${{ secrets.AIRBASE_ACCESS_KEY_ID }}
          AIRBASE_SECRET_ACCESS_KEY: ${{ secrets.AIRBASE_SECRET_ACCESS_KEY }}
          AIRBASE_RC: ${{ secrets.AIRBASE_RC }}
          CI_COMMIT_REF_SLUG: ${{ github.event.inputs.branch }}
